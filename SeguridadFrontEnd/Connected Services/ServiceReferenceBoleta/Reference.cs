//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeguridadFrontEnd.ServiceReferenceBoleta {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceBoleta.wsBoletaSoap")]
    public interface wsBoletaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MisVentas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable MisVentas(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MisVentas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> MisVentasAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarBoleta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarBoleta(string nroBoleta, string codProducto, string cantidad, string codCliente, string CodVendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarBoleta", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarBoletaAsync(string nroBoleta, string codProducto, string cantidad, string codCliente, string CodVendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarDetallesBoleta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] AgregarDetallesBoleta(string nroBoleta, string codProducto, string cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarDetallesBoleta", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarDetallesBoletaAsync(string nroBoleta, string codProducto, string cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Buscar(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarAsync(string texto, string criterio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsBoletaSoapChannel : SeguridadFrontEnd.ServiceReferenceBoleta.wsBoletaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsBoletaSoapClient : System.ServiceModel.ClientBase<SeguridadFrontEnd.ServiceReferenceBoleta.wsBoletaSoap>, SeguridadFrontEnd.ServiceReferenceBoleta.wsBoletaSoap {
        
        public wsBoletaSoapClient() {
        }
        
        public wsBoletaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsBoletaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsBoletaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsBoletaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public System.Data.DataTable MisVentas(string usuario) {
            return base.Channel.MisVentas(usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> MisVentasAsync(string usuario) {
            return base.Channel.MisVentasAsync(usuario);
        }
        
        public string[] AgregarBoleta(string nroBoleta, string codProducto, string cantidad, string codCliente, string CodVendedor) {
            return base.Channel.AgregarBoleta(nroBoleta, codProducto, cantidad, codCliente, CodVendedor);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarBoletaAsync(string nroBoleta, string codProducto, string cantidad, string codCliente, string CodVendedor) {
            return base.Channel.AgregarBoletaAsync(nroBoleta, codProducto, cantidad, codCliente, CodVendedor);
        }
        
        public string[] AgregarDetallesBoleta(string nroBoleta, string codProducto, string cantidad) {
            return base.Channel.AgregarDetallesBoleta(nroBoleta, codProducto, cantidad);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarDetallesBoletaAsync(string nroBoleta, string codProducto, string cantidad) {
            return base.Channel.AgregarDetallesBoletaAsync(nroBoleta, codProducto, cantidad);
        }
        
        public System.Data.DataTable Buscar(string texto, string criterio) {
            return base.Channel.Buscar(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarAsync(string texto, string criterio) {
            return base.Channel.BuscarAsync(texto, criterio);
        }
    }
}
