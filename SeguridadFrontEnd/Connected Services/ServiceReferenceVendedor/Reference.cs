//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SeguridadFrontEnd.ServiceReferenceVendedor {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceVendedor.wsVendedorSoap")]
    public interface wsVendedorSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Listar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Buscar(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Buscar", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarAsync(string texto, string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Agregar(string codVendedor, string nombres, string apellidos, string usuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Agregar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> AgregarAsync(string codVendedor, string nombres, string apellidos, string usuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Actualizar(string codVendedor, string nombres, string apellidos, string usuario, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Actualizar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ActualizarAsync(string codVendedor, string nombres, string apellidos, string usuario, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Eliminar(string codVendedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Eliminar", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> EliminarAsync(string codVendedor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsVendedorSoapChannel : SeguridadFrontEnd.ServiceReferenceVendedor.wsVendedorSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsVendedorSoapClient : System.ServiceModel.ClientBase<SeguridadFrontEnd.ServiceReferenceVendedor.wsVendedorSoap>, SeguridadFrontEnd.ServiceReferenceVendedor.wsVendedorSoap {
        
        public wsVendedorSoapClient() {
        }
        
        public wsVendedorSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsVendedorSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsVendedorSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsVendedorSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public System.Data.DataTable Buscar(string texto, string criterio) {
            return base.Channel.Buscar(texto, criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarAsync(string texto, string criterio) {
            return base.Channel.BuscarAsync(texto, criterio);
        }
        
        public string[] Agregar(string codVendedor, string nombres, string apellidos, string usuario, string contrasenia) {
            return base.Channel.Agregar(codVendedor, nombres, apellidos, usuario, contrasenia);
        }
        
        public System.Threading.Tasks.Task<string[]> AgregarAsync(string codVendedor, string nombres, string apellidos, string usuario, string contrasenia) {
            return base.Channel.AgregarAsync(codVendedor, nombres, apellidos, usuario, contrasenia);
        }
        
        public string[] Actualizar(string codVendedor, string nombres, string apellidos, string usuario, string contrasena) {
            return base.Channel.Actualizar(codVendedor, nombres, apellidos, usuario, contrasena);
        }
        
        public System.Threading.Tasks.Task<string[]> ActualizarAsync(string codVendedor, string nombres, string apellidos, string usuario, string contrasena) {
            return base.Channel.ActualizarAsync(codVendedor, nombres, apellidos, usuario, contrasena);
        }
        
        public string[] Eliminar(string codVendedor) {
            return base.Channel.Eliminar(codVendedor);
        }
        
        public System.Threading.Tasks.Task<string[]> EliminarAsync(string codVendedor) {
            return base.Channel.EliminarAsync(codVendedor);
        }
    }
}
